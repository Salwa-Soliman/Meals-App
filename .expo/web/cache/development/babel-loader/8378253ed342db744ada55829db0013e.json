{"ast":null,"code":"import React, { useLayoutEffect } from \"react\";\nimport MainScreen from \"./../components/MainScreen\";\nimport { Image, Text, View, Center } from \"native-base\";\nimport { MEALS } from \"../data/dummy_data\";\nimport Meal from \"../components/Meal\";\nimport IconButton from \"../components/IconButton\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MealDetails(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  var landscape = width > height;\n  var mealId = route.params.id;\n  var mealData = MEALS.find(function (meal) {\n    return meal.id === mealId;\n  });\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return _jsx(IconButton, {\n          color: \"#fff\"\n        });\n      }\n    });\n  }, [navigation]);\n  return _jsxs(View, {\n    flexDirection: landscape ? \"row-reverse\" : \"column\",\n    flex: 1,\n    children: [_jsx(Image, {\n      source: {\n        uri: mealData.imageUrl\n      },\n      alt: \"meal-image\",\n      w: landscape ? \"40%\" : \"100%\",\n      height: landscape ? \"100%\" : \"45%\"\n    }), _jsx(Meal, {\n      meal: mealData,\n      top: landscape ? 0 : \"-5%\",\n      landscape: landscape\n    })]\n  });\n}","map":{"version":3,"sources":["C:/Users/AAAA/OneDrive/Desktop/React Native/Udemy/MealsApp/resources/screens/MealDetails.js"],"names":["React","useLayoutEffect","MainScreen","Image","Text","View","Center","MEALS","Meal","IconButton","MealDetails","navigation","route","useWindowDimensions","width","height","landscape","mealId","params","id","mealData","find","meal","setOptions","headerRight","uri","imageUrl"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,eAAhB,QAAuC,OAAvC;AACA,OAAOC,UAAP;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,MAA5B,QAA0C,aAA1C;AACA,SAASC,KAAT;AACA,OAAOC,IAAP;AACA,OAAOC,UAAP;;;;AAGA,eAAe,SAASC,WAAT,OAA4C;AAAA,MAArBC,UAAqB,QAArBA,UAAqB;AAAA,MAATC,KAAS,QAATA,KAAS;;AACzD,6BAA0BC,mBAAmB,EAA7C;AAAA,MAAQC,KAAR,wBAAQA,KAAR;AAAA,MAAeC,MAAf,wBAAeA,MAAf;;AACA,MAAMC,SAAS,GAAGF,KAAK,GAAGC,MAA1B;AAEA,MAAME,MAAM,GAAGL,KAAK,CAACM,MAAN,CAAaC,EAA5B;AACA,MAAMC,QAAQ,GAAGb,KAAK,CAACc,IAAN,CAAW,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACH,EAAL,KAAYF,MAAtB;AAAA,GAAX,CAAjB;AACAhB,EAAAA,eAAe,CAAC,YAAM;AACpBU,IAAAA,UAAU,CAACY,UAAX,CAAsB;AACpBC,MAAAA,WAAW,EAAE;AAAA,eAAM,KAAC,UAAD;AAAY,UAAA,KAAK,EAAE;AAAnB,UAAN;AAAA;AADO,KAAtB;AAGD,GAJc,EAIZ,CAACb,UAAD,CAJY,CAAf;AAMA,SACE,MAAC,IAAD;AAAM,IAAA,aAAa,EAAEK,SAAS,GAAG,aAAH,GAAmB,QAAjD;AAA2D,IAAA,IAAI,EAAE,CAAjE;AAAA,eACE,KAAC,KAAD;AACE,MAAA,MAAM,EAAE;AAAES,QAAAA,GAAG,EAAEL,QAAQ,CAACM;AAAhB,OADV;AAEE,MAAA,GAAG,EAAC,YAFN;AAGE,MAAA,CAAC,EAAEV,SAAS,GAAG,KAAH,GAAW,MAHzB;AAIE,MAAA,MAAM,EAAEA,SAAS,GAAG,MAAH,GAAY;AAJ/B,MADF,EAOE,KAAC,IAAD;AAAM,MAAA,IAAI,EAAEI,QAAZ;AAAsB,MAAA,GAAG,EAAEJ,SAAS,GAAG,CAAH,GAAO,KAA3C;AAAkD,MAAA,SAAS,EAAEA;AAA7D,MAPF;AAAA,IADF;AAWD","sourcesContent":["import React, { useLayoutEffect } from \"react\";\r\nimport MainScreen from \"./../components/MainScreen\";\r\nimport { Image, Text, View, Center } from \"native-base\";\r\nimport { MEALS } from \"../data/dummy_data\";\r\nimport Meal from \"../components/Meal\";\r\nimport IconButton from \"../components/IconButton\";\r\nimport { useWindowDimensions } from \"react-native\";\r\n\r\nexport default function MealDetails({ navigation, route }) {\r\n  const { width, height } = useWindowDimensions();\r\n  const landscape = width > height;\r\n\r\n  const mealId = route.params.id;\r\n  const mealData = MEALS.find((meal) => meal.id === mealId);\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: () => <IconButton color={\"#fff\"} />,\r\n    });\r\n  }, [navigation]);\r\n\r\n  return (\r\n    <View flexDirection={landscape ? \"row-reverse\" : \"column\"} flex={1}>\r\n      <Image\r\n        source={{ uri: mealData.imageUrl }}\r\n        alt=\"meal-image\"\r\n        w={landscape ? \"40%\" : \"100%\"}\r\n        height={landscape ? \"100%\" : \"45%\"}\r\n      />\r\n      <Meal meal={mealData} top={landscape ? 0 : \"-5%\"} landscape={landscape} />\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}